// vite.config.ts
import { defineConfig, loadEnv } from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+vite@5.3.4_@types+node@22.0.0_sass@1.77.8/node_modules/vite/dist/node/index.js";
import path2 from "path";

// vite/plugins/index.ts
import vue from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+@vitejs+plugin-vue@5.0.5_vite@5.3.4_vue@3.4.31/node_modules/@vitejs/plugin-vue/dist/index.mjs";

// vite/plugins/auto-import.ts
import autoImport from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+unplugin-auto-import@0.18.2/node_modules/unplugin-auto-import/dist/vite.js";
import components from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+unplugin-vue-components@0.27.3_vue@3.4.31/node_modules/unplugin-vue-components/dist/vite.js";
import {
  ElementPlusResolver
} from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+unplugin-vue-components@0.27.3_vue@3.4.31/node_modules/unplugin-vue-components/dist/resolvers.js";
import Icons from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+unplugin-icons@0.19.1/node_modules/unplugin-icons/dist/vite.js";
import IconsResolver from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+unplugin-icons@0.19.1/node_modules/unplugin-icons/dist/resolver.js";
function createAutoImport() {
  const autoImportPlugin = autoImport({
    imports: ["vue", "vue-router", "pinia"],
    // 自动导入vue和vue-router相关函数
    resolvers: [
      ElementPlusResolver(),
      // 自动导入 Element Plus 相关函数，如：ElMessage, ElMessageBox... (带样式)
      IconsResolver({
        // 自动导入图标组件
        prefix: "Icon"
      })
    ],
    // dts: "./auto-import.d.ts", //自定义文件生成的位置与是否生成，默认是根目录下。运行会自动生成 `auto-import.d.ts` 全局声明
    dts: true,
    eslintrc: {
      enabled: false
    }
  });
  const componentsPlugin = components({
    // dirs: ['src/components'], // 配置需要默认导入的自定义组件文件夹，该文件夹下的所有组件都会自动 import
    resolvers: [
      ElementPlusResolver(),
      // 自动导入 Element Plus 组件
      IconsResolver({
        // 自动注册图标组件
        enabledCollections: [
          "ep"
        ]
        // 使用element-plus的图标库，其他图标库请到 https://icon-sets.iconify.design/
      })
    ]
    // dts: './components.d.ts',
  });
  const iconsPlugin = Icons({
    autoInstall: true
    //自动检测下载、安装图标库
  });
  return [autoImportPlugin, componentsPlugin, iconsPlugin];
}

// vite/plugins/svg-icon.ts
import {
  createSvgIconsPlugin
} from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+vite-plugin-svg-icons@2.0.1_vite@5.3.4/node_modules/vite-plugin-svg-icons/dist/index.mjs";
import path from "path";
function createSvgIcon(isBuild) {
  return createSvgIconsPlugin({
    iconDirs: [path.resolve(process.cwd(), "src/assets/icons/svg")],
    // 指定需要缓存的图标文件夹
    symbolId: "icon-[name]",
    // 指定symbolId格式
    svgoOptions: isBuild
  });
}

// vite/plugins/compression.ts
import compression from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+vite-plugin-compression@0.5.1_vite@5.3.4/node_modules/vite-plugin-compression/dist/index.mjs";
function createCompression() {
  return compression({
    threshold: 1024e3
    // 对大于 1M 的文件进行压缩，单位是字节，默认为 0
    // deleteOriginFile: false, // 压缩后是否删除原文件，默认为 false
    // verbose: true, //是否在控制台输出压缩结果，默认为 true
    // disable: false, //是否禁用压缩，默认为 false
    // algorithm: 'gzip', // 压缩算法，默认是 gzip。可选 [ ‘gzip’ , ‘brotliCompress’ ,‘deflate’ , ‘deflateRaw’]
    // ext: '.gz' // 生成的压缩包后缀
  });
}

// vite/plugins/eslint.ts
import eslintPlugin from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+vite-plugin-eslint@1.8.1_eslint@9.8.0_vite@5.3.4/node_modules/vite-plugin-eslint/dist/index.mjs";
function createEslint() {
  return eslintPlugin({
    include: ["src/**/*.js", "src/**/*.ts", "src/**/*.vue", "src/*.js", "src/*.ts", "src/*.vue"]
  });
}

// vite/plugins/inspect.ts
import inspect from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+vite-plugin-inspect@0.8.5_vite@5.3.4/node_modules/vite-plugin-inspect/dist/index.mjs";
function createInspect() {
  return inspect();
}

// vite/plugins/visualizer.ts
import { visualizer } from "file:///F:/%E4%BD%9C%E4%B8%9A%E5%92%8C%E7%BB%83%E4%B9%A0/assignment/2024-08/my-vue-app/node_modules/.pnpm/registry.npmmirror.com+rollup-plugin-visualizer@5.12.0/node_modules/rollup-plugin-visualizer/dist/plugin/index.js";
function createVisualizer() {
  return visualizer({
    open: true
    // 打包后自动打开分析报告
  });
}

// vite/plugins/index.ts
function createVitePlugins(isBuild = false) {
  const vitePlugins = [vue()];
  isBuild && vitePlugins.push(createEslint());
  vitePlugins.push(createSvgIcon(isBuild));
  vitePlugins.push(...createAutoImport());
  isBuild && vitePlugins.push(createCompression());
  isBuild && vitePlugins.push(createInspect());
  vitePlugins.push(createVisualizer());
  return vitePlugins;
}

// vite.config.ts
var __vite_injected_original_dirname = "F:\\\u4F5C\u4E1A\u548C\u7EC3\u4E60\\assignment\\2024-08\\my-vue-app";
var vite_config_default = defineConfig(({ mode, command }) => {
  const env = loadEnv(mode, process.cwd());
  return {
    base: "./",
    resolve: {
      // https://cn.vitejs.dev/config/#resolve-alias
      alias: {
        "~": path2.resolve(__vite_injected_original_dirname, "./"),
        "@": path2.resolve(__vite_injected_original_dirname, "./src")
        //设置别名。将src目录配置别名为 @ 方便在项目中导入src目录下的文件
      },
      // https://cn.vitejs.dev/config/#resolve-extensions
      extensions: [".mjs", ".js", ".ts", ".jsx", ".tsx", ".json", ".vue"]
    },
    build: {
      outDir: "docs"
      //想要把dist修改成什么名字在这边改
    },
    plugins: createVitePlugins(command === "build"),
    // 本地运行配置
    server: {
      host: "0.0.0.0",
      //指定服务器应该监听哪个 IP 地址。 如果将此设置为 0.0.0.0 或者 true 将监听所有地址，包括局域网和公网地址。
      port: 9999,
      // 访问端口号
      cors: true,
      // 默认启用并允许任何源
      open: true,
      // 在服务器启动时自动在浏览器中打开应用程序
      proxy: {
        "/api": {
          target: "https://pbaccess.video.qq.com/",
          //接口域名
          changeOrigin: true,
          //是否跨域
          ws: true,
          //是否代理 websockets
          secure: true,
          //是否https接口
          pathRewrite: {
            //路径重置
            "^/api": ""
          }
        }
      }
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
